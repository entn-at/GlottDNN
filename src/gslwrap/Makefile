# Makefile.in generated by automake 1.6.3 from Makefile.am.
# gslwrap/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/gslwrap
pkglibdir = $(libdir)/gslwrap
pkgincludedir = $(includedir)/gslwrap
top_builddir = ..

ACLOCAL = ${SHELL} /Users/ljuvela/CODE/GlottPP/src/gslwrap-0.2/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /Users/ljuvela/CODE/GlottPP/src/gslwrap-0.2/missing --run autoconf
AUTOMAKE = ${SHELL} /Users/ljuvela/CODE/GlottPP/src/gslwrap-0.2/missing --run automake-1.6
AUTOHEADER = ${SHELL} /Users/ljuvela/CODE/GlottPP/src/gslwrap-0.2/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = i386-apple-darwin15.6.0

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /Users/ljuvela/CODE/GlottPP/src/gslwrap-0.2/missing --run tar
AWK = awk
CXX = g++
DEPDIR = .deps
GSLWRAP_CFLAGS = -I${prefix}/include -I${prefix}/include/gslwrap -I/usr/local/Cellar/gsl/1.16/include 
GSLWRAP_LIBS = -L${exec_prefix}/lib -lgslwrap -L/usr/local/Cellar/gsl/1.16/lib -lgsl -lgslcblas
GSL_CFLAGS = -I/usr/local/Cellar/gsl/1.16/include
GSL_CONFIG = /usr/local/bin/gsl-config
GSL_LIBS = -L/usr/local/Cellar/gsl/1.16/lib -lgsl -lgslcblas
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
PACKAGE = gslwrap
RANLIB = ranlib
STRIP = 
VERSION = 0.2
am__include = include
am__quote = 
install_sh = /Users/ljuvela/CODE/GlottPP/src/gslwrap-0.2/install-sh
EXTRA_DIST = generate matrix_source.cc matrix_source.h vector_source.cc vector_source.h
INCLUDES = -I$(top_srcdir) -I/usr/local/Cellar/gsl/1.16/include
lib_LIBRARIES = libgslwrap.a
libgslwrapincludedir = $(includedir)/gslwrap

BUILT_SOURCES = matrix_float.h matrix_double.h matrix_int.h \
vector_double.h  vector_float.h  vector_int.h \
matrix_float.cc matrix_double.cc matrix_int.cc \
vector_float.cc vector_double.cc vector_int.cc 


libgslwrapinclude_HEADERS = matrix_float.h matrix_double.h matrix_int.h \
vector_double.h  vector_float.h  vector_int.h \
permutation.h \
histogram.h \
matrix_vector_operators.h \
min_fminimizer.h multimin_fdfminimizer.h \
random_generator.h \
random_number_distribution.h


libgslwrap_a_SOURCES = matrix_float.cc matrix_double.cc matrix_int.cc \
vector_float.cc vector_double.cc vector_int.cc \
random_generator.cc 

subdir = gslwrap
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_CLEAN_FILES =
LIBRARIES = $(lib_LIBRARIES)

libgslwrap_a_AR = $(AR) cru
libgslwrap_a_LIBADD =
am_libgslwrap_a_OBJECTS = matrix_float.$(OBJEXT) matrix_double.$(OBJEXT) \
	matrix_int.$(OBJEXT) vector_float.$(OBJEXT) \
	vector_double.$(OBJEXT) vector_int.$(OBJEXT) \
	random_generator.$(OBJEXT)
libgslwrap_a_OBJECTS = $(am_libgslwrap_a_OBJECTS)

DEFS = -DPACKAGE_NAME=\"\" -DPACKAGE_TARNAME=\"\" -DPACKAGE_VERSION=\"\" -DPACKAGE_STRING=\"\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE=\"gslwrap\" -DVERSION=\"0.2\" 
DEFAULT_INCLUDES =  -I. -I$(srcdir)
CPPFLAGS = 
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/matrix_double.Po \
	./$(DEPDIR)/matrix_float.Po \
	./$(DEPDIR)/matrix_int.Po \
	./$(DEPDIR)/random_generator.Po \
	./$(DEPDIR)/vector_double.Po \
	./$(DEPDIR)/vector_float.Po \
	./$(DEPDIR)/vector_int.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = -g -O2
DIST_SOURCES = $(libgslwrap_a_SOURCES)
HEADERS = $(libgslwrapinclude_HEADERS)

DIST_COMMON = $(libgslwrapinclude_HEADERS) Makefile.am Makefile.in
SOURCES = $(libgslwrap_a_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  gslwrap/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

AR = ar
libLIBRARIES_INSTALL = $(INSTALL_DATA)
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libdir)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f"; \
	    $(libLIBRARIES_INSTALL) $$p $(DESTDIR)$(libdir)/$$f; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) $(DESTDIR)$(libdir)/$$p"; \
	    $(RANLIB) $(DESTDIR)$(libdir)/$$p; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libdir)/$$p"; \
	  rm -f $(DESTDIR)$(libdir)/$$p; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libgslwrap.a: $(libgslwrap_a_OBJECTS) $(libgslwrap_a_DEPENDENCIES) 
	-rm -f libgslwrap.a
	$(libgslwrap_a_AR) libgslwrap.a $(libgslwrap_a_OBJECTS) $(libgslwrap_a_LIBADD)
	$(RANLIB) libgslwrap.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/matrix_double.Po
include ./$(DEPDIR)/matrix_float.Po
include ./$(DEPDIR)/matrix_int.Po
include ./$(DEPDIR)/random_generator.Po
include ./$(DEPDIR)/vector_double.Po
include ./$(DEPDIR)/vector_float.Po
include ./$(DEPDIR)/vector_int.Po

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cc.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cc.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`
CXXDEPMODE = depmode=gcc3
uninstall-info-am:
libgslwrapincludeHEADERS_INSTALL = $(INSTALL_HEADER)
install-libgslwrapincludeHEADERS: $(libgslwrapinclude_HEADERS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(libgslwrapincludedir)
	@list='$(libgslwrapinclude_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(libgslwrapincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libgslwrapincludedir)/$$f"; \
	  $(libgslwrapincludeHEADERS_INSTALL) $$d$$p $(DESTDIR)$(libgslwrapincludedir)/$$f; \
	done

uninstall-libgslwrapincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgslwrapinclude_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f $(DESTDIR)$(libgslwrapincludedir)/$$f"; \
	  rm -f $(DESTDIR)$(libgslwrapincludedir)/$$f; \
	done

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(libdir) $(DESTDIR)$(libgslwrapincludedir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am: install-libgslwrapincludeHEADERS

install-exec-am: install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-libgslwrapincludeHEADERS

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES distclean distclean-compile distclean-depend \
	distclean-generic distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-libLIBRARIES install-libgslwrapincludeHEADERS \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic tags \
	uninstall uninstall-am uninstall-info-am uninstall-libLIBRARIES \
	uninstall-libgslwrapincludeHEADERS


$(BUILT_SOURCES): vector_source.h matrix_source.h vector_source.cc matrix_source.cc
	./generate
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
